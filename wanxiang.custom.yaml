# Rime schema
# encoding: utf-8

patch:
# 方案: 万象·全拼虎辅
  schema/dependencies:
      - melt_eng        # 英文输入，作为次翻译器挂载到拼音方案
      - radical_pinyin  # 反查：部件拆字，反查及辅码
      - stroke          #反查：笔画组字
      - core2022        #字符集过滤器（取自官方虎）


#中文状态下输入英文单词,后面自动追加空格
  engine/filters/@after 10: lua_filter@*en_spacer

# 增加虎码拆分和拼音滤镜
  switches/+:
    - name: chaifen  # 虎码配套拆分
      reset: 0
      states: [ 拆隐, 拆显 ]
    - name: pinyin   #拼音滤镜（虎码配套）
      reset: 0
      states: [ 拼关, pīn ]
  engine/filters/@after 11: simplifier@chaifen  #拆分滤镜
  engine/filters/@after 12: simplifier@pinyin  #拼音滤镜
  chaifen:  # 拆分滤镜
    opencc_config: hu_cf.json
    option_name: chaifen
    show_in_comment: true 
    comment_format:     
      - "xform/&nbsp;/ /"
    tags:     
      - abc
      - tiger
      - reverse_lookup
    tips: all #如只想给单字加滤镜，可改为 char
  pinyin:  # ↓拼音滤镜
    opencc_config: pinyin.json
    option_name: pinyin
    show_in_comment: true #作为注解在后面显示
    comment_format:
      - 'xform/&nbsp;/ /'
      # - "xform/^/ /"
    tips: char
    tags:
      - abc
      - tiger
      # - reverse_lookup

# 修改自定义词库为官方虎词库【注释掉该行将取消全拼方案的虎码混输功能】:
  # custom_phrase/user_dict/=: 0--core/custom_phrase/tigress_all

# 修改自造词的前缀：
  recognizer/patterns/add_user_dict: "^ADD[A-Za-z/`']*$"  #自造词
  add_user_dict/prefix: "ADD"

  punctuator:
    digit_separators: ":,."  #数字分隔符
    __include: 0--core/rays_symbols:/punctuator    # 挂载我的符号文件

# 超级注释模块：
  super_comment/fuzhu_type: tiger   # 用于匹配对应的辅助码注释显示，基于默认词典的可选注释类型有：( moqi, flypy, zrm, jdh, cj, tiger, wubi, hanxin) tone (这个参数特殊，在注释里显示声调，不算辅助码，也填入此处)选择一个填入，之所以单独列出是因为这里有更多的可配置性，而真正的辅助码默认只有8种

# 快捷键：
  key_binder/bindings/@next/+: { when: has_menu, accept: apostrophe, send: 2 }  # 增加单引号二选
  key_binder/bindings/@next/+: { when: has_menu, accept: bracketright, send: 3 }  # 增加 “]” 三选

# 拼写运算 (决定本方案的拼音、辅助码输入方式)：
  speller/alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA`[;/
  speller/initials: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA;
  speller/algebra:
   # 全拼输入
    - xlit/āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜü/aaaaooooeeeeiiiiuuuuvvvvv/
    - xform/ńg|ňg|ǹg/en/
    - xform/ń|ň|ǹ/en/

   # 增加模糊音和快捷输入

    # - abbrev/^([a-z]).+$/$1/   # 超级简拼  (不再开启, 因为句子长了会拖慢算法响应速度)
    # - abbrev/^([zcs]h).+$/$1/  # 超级简拼中，zh ch sh 视为整体（ch'sh → 城市），而不是像这样分开（c'h's'h → 吃好睡好）。

    ### v u 转换
    # 支持使用 qu/qv nue/nve 来输入 qu nve
    - derive/^([nl])ve;/$1ue;/
    - derive/^([jqxy])u/$1v/
    # 以防引入的其他词库没按照正确方式注音，也做一个转换
    - derive/^([nl])ue;/$1ve;/
    - derive/^([jqxy])v/$1u/

    # 自動糾正一些常見的按鍵錯誤
    - derive/^([a-z]+?)([aeiou])ng(;.+)$/$1$2gn$3/        # dagn => dang
    - derive/^([dtngkhrzcs])o(u|ng)(;.+)$/$1o$3/ # zho => zhong|zhou
    - derive/^([a-z]+?)ong(;.+)$/$1on$2/  # zhonguo => zhong guo
    - derive/^ding(;.+)$/din$1/       # din = ding
    - derive/^([a-z]+?)([iu])a(o|ng?)(;.+)$/$1a$2$3$4/    # tain = tian; aio = iao; aing = iang; aung = uang
    - derive/^tie(;.+)$/tei$1/    # tei = tie

    ### 自动纠错(以下拼运取自白霜拼音: https://github.com/gaboolic/rime-frost/blob/master/rime_frost.schema.yaml)
    ######## START 这几个有副作用的规则圈起来，方便取舍
    # 这些规则对全拼简拼混输有副作用：如「x'ai 喜爱」被纠错为「xia 下」
    # zh、ch、sh
    - derive/^([zcs])h(a|e|i|u|ai|ei|an|en|ou|uo|ua|un|ui|uan|uai|uang|ang|eng|ong);/h$1$2;/  # hzi → zhi
    - derive/^([zcs])h([aeiu]);/$1$2h;/  # zih → zhi
    # # ia
    # - derive/^([qjx])ia;/$1ai;/  # qai → qia
    # # an
    # - derive/^([wrtypsdfghklzcbnm])an;/$1na;/  # dna → dan
    # # en
    # - derive/^([wrpsdfghklzcbnm])en;/$1ne;/  # rne → ren
    # # in
    # - derive/^([qypjlxbnm])in;/$1ni;/  # qni → qin
    # # un
    # - derive/^([qrtysdghjklzxc])un;/$1nu;/  # qnu → qun
    # # ian
    # - derive/^([qtpdjlxbnm])ian;/$1ain;/
    ######## END
    # ai
    - derive/^([wghk])ai;/$1ia;/  # wia → wai
    # ei
    - derive/^([wfghkz])ei;/$1ie;/  # wie → wei
    # ie
    - derive/^([jqx])ie;/$1ei;/  # jei → jie
    # ao
    - derive/^([rtypsdghklzcbnm])ao;/$1oa;/
    # ou
    - derive/^([ypfm])ou;/$1uo;/
    # uo（无）
    # ang
    - derive/^([wrtypsdfghklzcbnm])ang;/$1nag;/
    - derive/^([wrtypsdfghklzcbnm])ang;/$1agn;/
    # eng
    - derive/^([wrtpsdfghklzcbnm])eng;/$1neg;/
    - derive/^([wrtpsdfghklzcbnm])eng;/$1egn;/
    # ing
    - derive/^([qtypdjlxbnm])ing;/$1nig;/
    - derive/^([qtypdjlxbnm])ing;/$1ign;/
    # ong
    - derive/^([rtysdghklzcn])ong;/$1nog;/
    - derive/^([rtysdghklzcn])ong;/$1ogn;/
    # iao
    - derive/^([qtpdjlxbnm])iao;/$1ioa;/
    - derive/^([qtpdjlxbnm])iao;/$1oia;/
    # ui
    - derive/^([rtsghkzc])ui;/$1iu;/
    # iu
    - derive/^([qjlxnm])iu;/$1ui;/
    # iang
    - derive/^([qjlxn])iang;/$1aing;/
    - derive/^([qjlxn])iang;/$1inag;/
    # ua
    - derive/^([g|k|h|zh|sh])ua;/$1au;/
    # uai
    - derive/^([g|h|k|zh|ch|sh])uai;/$1aui;/
    # - derive/^([g|h|k|zh|ch|sh])uai;/$1uia;/ # 和「会啊、追啊」等常用词有冲突
    # uan
    - derive/^([qrtysdghjklzxcn])uan;/$1aun;/
    # - derive/^([qrtysdghjklzxcn])uan;/$1una;/ # 和「去哪、露娜」等常用词有冲突
    # ue
    - derive/^([nlyjqx])ue;/$1eu;/
    # uang
    - derive/^([g|h|k|zh|ch|sh])uang;/$1aung;/
    - derive/^([g|h|k|zh|ch|sh])uang;/$1uagn;/
    - derive/^([g|h|k|zh|ch|sh])uang;/$1unag;/
    - derive/^([g|h|k|zh|ch|sh])uang;/$1augn;/
    # iong
    - derive/^([jqx])iong;/$1inog;/
    - derive/^([jqx])iong;/$1oing;/
    - derive/^([jqx])iong;/$1iogn;/
    - derive/^([jqx])iong;/$1oign;/
    # 其他
    - derive/^([rtsdghkzc])o(u|ng);/$1o;/ # do → dou|dong
    - derive/^([a-z]+)ong;/$1on;/ # lon → long
    - derive/^([tl])eng;/$1en;/ # ten → teng
    - derive/^([qwrtypsdfghjklzxcbnm])([aeio])ng;/$1ng;/ # lng → lang、leng、ling、long

    # 说明
      # xform --改寫〔不保留原形〕
      # derive --衍生〔保留原形〕
      # abbrev --簡拼〔出字優先級較上兩組更低〕
      # fuzz --畧拼〔此種簡拼僅組詞，不出單字〕
      # xlit --變換〔適合大量一對一變換〕
      # erase --刪除

   # 虎码首末辅码
    - xform|^(.*?);.*?;.*?;.*?;.*?;.*?;(.*?);.*$|$1;$2|
    - derive|^(.+);.*$|$1| # 纯双拼的情况
    - abbrev|^(.+);(\w)(\w).*$|$1$2| # 双拼+一位辅助码的情况
    - derive|^(.+);(\w)(\w).*$|$1$2[| # 双拼+[一位辅助码的情况
    - abbrev|^(.+);(\w)(\w).*$|$1$2$3| # 双拼+2位辅助码的情况
    - derive|^(.+);(\w)(\w).*$|$1$2$3/| # 双拼+2位辅助码+/
    # - derive|^(.+);(\w)(\w).*$|$1$2$3o| # 双拼\+2位辅助码\+o，主要用来应对小企鹅这类输入法没法使用符号的场景，但同时有些辅助码会出现异常，如：ui uio>uiuio
#分号后面第二组辅助码
    - abbrev/^(.+);.*?,(\w)(\w).*$/$1$2/
    - derive/^(.+);.*?,(\w)(\w).*$/$1$2[/
    - abbrev/^(.+);.*?,(\w)(\w).*$/$1$2$3/
    - derive|^(.+);.*?,(\w)(\w).*$|$1$2$3/|
    # - derive/^(.+);.*?,(\w)(\w).*$/$1$2$3o/
    # - xform/◯/;/  #对于微软双拼、搜狗双拼，前面将分号保护了起来，现在放出来让其发挥作用
    - erase/^(.+);(.+)$/    # 删除原始编码加速检索
