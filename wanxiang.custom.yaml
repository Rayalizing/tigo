# Rime schema
# encoding: utf-8

patch:
# 方案说明
  schema:
    schema_id: wanxiang
    name: 全拼虎·万象
    version: "2025-01-01"
    author:
      - amzxyz
    description: |
      万象拼音 支持常见双拼方案和全拼输入，辅助码同时支持墨奇;鹤形;自然码;简单鹤;仓颉首末;虎码首末;五笔前2;汉心码；采用万象归一的词库，换方案不换词库，不丢失用户词！
    dependencies:
      - melt_eng        # 英文输入，作为次翻译器挂载到拼音方案
      - radical_pinyin  # 反查：部件拆字，反查及辅码
      - stroke          #反查：笔画组字
      - core2022        #字符集过滤器（取自官方虎）


#中文状态下输入英文单词,后面自动追加空格
  engine/filters/@after 10: lua_filter@*en_spacer

# 增加虎码拆分和拼音滤镜
  engine/filters/@after 11: simplifier@chaifen  #拆分滤镜
  engine/filters/@after 12: simplifier@pinyin  #拼音滤镜

  chaifen:  # 拆分滤镜
    opencc_config: hu_cf.json
    option_name: chaifen
    show_in_comment: true 
    comment_format:     
      - "xform/&nbsp;/ /"
    tags:     
      - abc
      - tiger
      - reverse_lookup
    tips: all #如只想给单字加滤镜，可改为 char

  pinyin:  # ↓拼音滤镜
    opencc_config: pinyin.json
    option_name: pinyin
    show_in_comment: true #作为注解在后面显示
    comment_format:
      - 'xform/&nbsp;/ /'
      # - "xform/^/ /"
    tips: char
    tags:
      - abc
      - tiger
      # - reverse_lookup

# 增加虎码混输模块
  switches/+:
    - name: chaifen  # 虎码配套拆分
      reset: 0
      states: [ 拆隐, 拆显 ]
    - name: pinyin   #拼音滤镜（虎码配套）
      reset: 0
      states: [ 拼关, pīn ]
    # # 以下为虎码混输
    # - name: tiger-sentence
    #   reset: 1
    #   states: [关, 虎句]
    # - name: tigress
    #   states: [ 关, 虎词 ]
    #   reset: 1
    # - name: tiger
    #   states: [ 关, 虎单 ]
    #   reset: 1
    # - name: simple
    #   states: [ 两码句, 原码句 ]
    # - name: sentence
    #   states: [ 关, 置顶组句 ]
    #   reset: 0
      
  # engine/translators/@next/+: lua_translator@translator_switch
  # engine/translators/@next/+: table_translator@tiger_sentence

  engine/filters/@0/=: lua_filter@core2022  # 修改字集过滤为虎码官方版本(放在最上面完美解决简繁滤镜出错的问题)
  # engine/filters/@next/+: lua_filter@*remove_tiger_filter
  # engine/filters/@after 2: lua_filter@*remove_tiger_filter  # 虎码混输开关
  # recognizer/patterns/+: 
  #   tiger_sentence: '^[A-Za-z]{5}[A-Za-z]*'
  
# 修改自定义词库为官方虎词库【注释掉该行将取消全拼方案的虎码混输功能】:
  # custom_phrase/user_dict/=: 0--core/custom_phrase/tigress_all

# 修改自造词的前缀：
  recognizer/patterns/add_user_dict: "^ADD[A-Za-z/`']*$"  #自造词
  add_user_dict/prefix: "ADD"

# 增加预测模块（https://github.com/rime/librime-predict）
  engine/processors/@before 0: predictor
  engine/translators/@before 0: predict_translator
  switches/@next/+:
    name: prediction
    states: [ 预测关, 预测开 ]
    reset: 0
  predictor:
    db: predict.db
    max_iterations: 0  # 迭代次数，0为无限次
    max_candidates: 7  # 候选词个数（建议和menu/page_size的数量一致）

# 候选词个数
  menu/page_size: 7

# translator/dictionary/=: wanxiang.extended    # 挂载词库 wanxiang.extended.dict.yaml
  punctuator:
    digit_separators: ":,."  #数字分隔符
    __include: 0--core/rays_symbols:/punctuator    # 挂载我的符号文件

# 超级注释模块，子项配置 true 开启，false 关闭
  pro_comment_format:
    candidate_length: 1         # 候选词辅助码提醒的生效长度，0为关闭  但同时清空其它，应当使用上面开关来处理    
    fuzhu_type: tiger             # 用于匹配对应的辅助码注释显示，基于默认词典的可选注释类型有：( moqi, flypy, zrm, jdh, cj, tiger, wubi, hanxin) tone (这个参数特殊，在注释里显示声调，不算辅助码，也填入此处)选择一个填入，之所以单独列出是因为这里有更多的可配置性，而真正的辅助码默认只有8种
    corrector_type: "{comment}"  # 换一种显示类型，比如"({comment})" 

  key_binder/bindings/@1/=: { when: has_menu, accept: apostrophe, send: 2 }  # 修改分号二选为单引号二选
  key_binder/bindings/@next/+: { when: has_menu, accept: slash, send: 3 }  # 增加斜杠三选

  
# 拼写运算 (决定本方案的拼音、辅助码输入方式)：
  speller/alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA`[;
  speller/initials: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA;
  speller/algebra:
   # 全拼输入
    - xlit/āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜü/aaaaooooeeeeiiiiuuuuvvvvv/
    - xform/ń|ň|ǹ/en/ 
    - xform/ńg|ňg|ǹg/en/

   # 虎码首末辅码
    - xform|^(.*?);.*?;.*?;.*?;.*?;.*?;(.*?);.*$|$1;$2|
    - derive|^(.+);.*$|$1| # 纯双拼的情况
    - abbrev|^(.+);(\w)(\w).*$|$1$2| # 双拼+一位辅助码的情况
    # - derive|^(.+);(\w)(\w).*$|$1[$2| # 双拼+[一位辅助码的情况
    - abbrev|^(.+);(\w)(\w).*$|$1$2$3| # 双拼+2位辅助码的情况
    - derive|^(.+);(\w)(\w).*$|$1$2$3[| # 双拼+2位辅助码+[
    # - derive|^(.+);(\w)(\w).*$|$1$2$3o| # 双拼+2位辅助码+o
    #分号后面的第二组辅助码
    - abbrev/^(.+);.*?,(\w)(\w).*$/$1$2/
    # - derive/^(.+);.*?,(\w)(\w).*$/$1[$2/
    - abbrev/^(.+);.*?,(\w)(\w).*$/$1$2$3/
    - derive|^(.+);.*?,(\w)(\w).*$|$1$2$3[|
    # - derive/^(.+);.*?,(\w)(\w).*$/$1$2$3o/
    - erase/^(.+);(.+)$/    # 删除原始编码加速检索
